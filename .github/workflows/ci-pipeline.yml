name: Java CI/CD with Gradle

on:
  pull_request:
    branches:
      - main
      - dev
      - 'feature/**'
  push:
    branches:
      - main
      - dev
      - 'feature/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1. checkout : Git으로부터 소스코드 가져오기
      - name: Checkout source
        uses: actions/checkout@v4

      # JDK 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 2. build : 애플리케이션 빌드
      - name: Build with Gradle
        run: ./gradlew build -x test

      # 3. test : 테스트 실행
      - name: Run tests
        run: ./gradlew test

      # 4. lint : 코드 정적 분석 (Checkstyle/Spotless/Detekt 등 필요에 맞게 수정)
      - name: Run lint
        run: ./gradlew check

      # 5. report : 리포트 아카이빙
      - name: Archive test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: build/reports/tests/test

      - name: Archive lint reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-reports
          path: build/reports

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 브랜치별 서버 배포
      - name: Deploy to Development server
        if: github.ref == 'refs/heads/dev'
        run: |
          echo "배포: Development 서버"
          ssh ${{ secrets.DEV_SERVER_USER }}@${{ secrets.DEV_SERVER_HOST }} "cd /app && ./deploy-dev.sh"

      - name: Deploy to Feature server
        if: startsWith(github.ref, 'refs/heads/feature/')
        run: |
          echo "배포: Feature 서버"
          ssh ${{ secrets.FEATURE_SERVER_USER }}@${{ secrets.FEATURE_SERVER_HOST }} "cd /app && ./deploy-feature.sh"

      - name: Deploy to Production server
        if: github.ref == 'refs/heads/main'
        run: |
          echo "배포: Production 서버"
          ssh ${{ secrets.PROD_SERVER_USER }}@${{ secrets.PROD_SERVER_HOST }} "cd /app && ./deploy-prod.sh"
